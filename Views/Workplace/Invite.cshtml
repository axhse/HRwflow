@model InviteVM
@{
	ViewData["Title"] = "Invite";
	var errorText = !Model.HasError ? null : Model.Error switch
	{
		InvitationErrors.UserNotFound
			=> "Пользователь не найден.",
		InvitationErrors.UserAlreadyJoined
			=> "Пользователь уже добавлен в группу.",
		InvitationErrors.JoinLimitExceeded
			=> "Пользователь уже состоит в максимально"
			+ " возможном количестве групп.",
		InvitationErrors.TeamSizeLimitExceeded
			=> "В группе может быть не более чем"
			+ $" {WorkplaceLimits.TeamJoinLimit} участников.",
		_ => null
	};
}

<div class="navbar custom-navbar border-bottom">
	<div class="container" align="center">
		<div class="col-12 mt-3">
			<p class="text-dark fw-bold">Пригласить в группу</p>
		</div>
	</div>
</div>

<div class="container mt-5" align="center">
	<div class="col-10 col-sm-7 col-md-6 col-lg-5 col-xl-4">
		<form method="POST">
			<div>
				<label for="usernameInput" class="form-label">
					Логин участника
				</label>
				<input type="text" class="form-control text-center" id="usernameInput" name="username">
			</div>
			<div class="mt-5">
				@if (errorText is not null)
				{
					<p class="text-info">@errorText</p>
				}
				<button type="submit" class="btn btn-success">
					Пригласить
				</button>
			</div>
		</form>
	</div>
	<div class="mt-4">
		<a class="link-secondary" href="/workplace/team?teamId=@Model.TeamId">
			Вернуться
		</a>
	</div>
</div>
